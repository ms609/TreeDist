% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree_distance_utilities.R
\name{NormalizeInfo}
\alias{NormalizeInfo}
\title{Normalize information against total present in both starting trees}
\usage{
NormalizeInfo(
  unnormalized,
  tree1,
  tree2,
  InfoInTree,
  infoInBoth = NULL,
  how = TRUE,
  Combine = "+",
  ...
)
}
\arguments{
\item{unnormalized}{Numeric value to be normalized.}

\item{tree1, tree2}{Trees from which \code{unnormalized} was calculated}

\item{InfoInTree}{Function to calculate the information content of each tree}

\item{infoInBoth}{Numeric specifying information content of both trees
independently (optional)}

\item{how}{Method for normalization}

\item{\dots}{Additional parameters to \code{InfoInTree()} or \code{how}.}
}
\value{
\code{NormalizeInfo()} returns an object corresponding to the normalized
values of \code{unnormalized}.
}
\description{
Normalize information against total present in both starting trees
}
\examples{
library("TreeTools", quietly = TRUE)
pair1 <- c(BalancedTree(9), StarTree(9))
pair2 <- c(BalancedTree(9), PectinateTree(9))

# We'll let the number of nodes define the total information in a tree
Nnode(pair1)
Nnode(pair2)

# Let's normalize a unit distance
rawDist <- cbind(c(1, 1), c(1, 1))

# With `Combine = "+"`, the maximum distance is the sum of
# the information in each tree
denominator <- outer(Nnode(pair1), Nnode(pair2), "+")

NormalizeInfo(rawDist, pair1, pair2, InfoInTree = ape::Nnode, Combine = "+")
rawDist / denominator


# A denominator can be specified manually using `how`:
NormalizeInfo(rawDist, pair1, pair2, InfoInTree = ape::Nnode, how = 16)
rawDist / 16


# `how` also allows the denominator to be computed from trees:
outer(Nnode(pair1), Nnode(pair2), pmin)
NormalizeInfo(rawDist, pair1, pair2, InfoInTree = ape::Nnode, how = pmin)
rawDist / outer(Nnode(pair1), Nnode(pair2), pmin)

}
\author{
\href{https://orcid.org/0000-0001-5660-1727}{Martin R. Smith}
(\href{mailto:martin.smith@durham.ac.uk}{martin.smith@durham.ac.uk})
}
\keyword{internal}
