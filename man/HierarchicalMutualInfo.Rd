% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hierarchical_mutual_information.R
\name{HierarchicalMutualInfo}
\alias{HierarchicalMutualInfo}
\title{Hierarchical Mutual Information for phylogenetic trees}
\usage{
HierarchicalMutualInfo(
  tree1,
  tree2 = NULL,
  normalize = FALSE,
  reportMatching = FALSE
)
}
\arguments{
\item{tree1, tree2}{Trees of class \code{phylo}, or lists of such trees.
If \code{tree2} is not provided, distances will be calculated between
each pair of trees in the list \code{tree1}.}

\item{normalize}{Logical. If \code{TRUE}, normalize the result to range \link{0,1}.}

\item{reportMatching}{Logical specifying whether to return the clade
matchings as an attribute of the score.}
}
\value{
A numeric value representing the Hierarchical Mutual Information
between the input trees. If \code{reportMatching = TRUE}, returns additional
attributes showing the optimal matching between splits.
}
\description{
Calculate the Hierarchical Mutual Information (HMI) between two phylogenetic
trees, which extends traditional mutual information to account for the
hierarchical structure inherent in phylogenetic trees.
}
\details{
Hierarchical Mutual Information is a recursive algorithm that considers the
nested, hierarchical structure of phylogenetic trees when computing information
measures. The algorithm converts trees to hierarchical partitions and computes
mutual information recursively, weighting contributions by the number of
overlapping elements at each level of the hierarchy.

The algorithm follows the implementation described in Perotti et al. (2015)
and is based on the recursive formula:

For internal nodes: I(t,s) = log(n_ts) - (H_us + H_tv - H_uv)/n_ts + mean(I_uv)

Where:
\itemize{
\item n_ts is the number of common elements between partitions
\item H_us, H_tv, H_uv are entropy terms from child comparisons
\item I_uv is the recursive HMI for child pairs
}
}
\examples{
\dontrun{
library("TreeTools", quietly = TRUE)

tree1 <- BalancedTree(8)
tree2 <- PectinateTree(8)

# Calculate HMI between two trees
HierarchicalMutualInfo(tree1, tree2)

# Normalized HMI
HierarchicalMutualInfo(tree1, tree2, normalize = TRUE)

# Expected result for 6-tip balanced vs pectinate trees
bal6 <- BalancedTree(6)
pec6 <- PectinateTree(6)
HierarchicalMutualInfo(bal6, pec6)  # Should be approximately 0.24
}

}
\references{
Perotti, J. I., Tessone, C. J., & Caldarelli, G. (2015).
Hierarchical mutual information for the comparison of hierarchical
community structures in complex networks.
Physical Review E, 92(6), 062825.
}
\seealso{
Other tree distances: 
\code{\link{JaccardRobinsonFoulds}()},
\code{\link{KendallColijn}()},
\code{\link{MASTSize}()},
\code{\link{MatchingSplitDistance}()},
\code{\link{NNIDist}()},
\code{\link{NyeSimilarity}()},
\code{\link{PathDist}()},
\code{\link{Robinson-Foulds}},
\code{\link{SPRDist}()},
\code{\link{TreeDistance}()}
}
\concept{tree distances}
