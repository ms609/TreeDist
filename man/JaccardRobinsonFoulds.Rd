% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree_distance_nye.R
\name{JaccardRobinsonFoulds}
\alias{JaccardRobinsonFoulds}
\alias{JaccardSplitSimilarity}
\title{Jaccard-Robinson-Foulds metric}
\usage{
JaccardRobinsonFoulds(tree1, tree2, k = 1L, arboreal = TRUE,
  similarity = FALSE, normalize = FALSE, reportMatching = FALSE)

JaccardSplitSimilarity(splits1, splits2, k = 1L, arboreal = TRUE,
  reportMatching = FALSE)
}
\arguments{
\item{tree1}{Trees of class \code{phylo}, with tips labelled identically,
or lists of such trees to undergo pairwise comparison.}

\item{tree2}{Trees of class \code{phylo}, with tips labelled identically,
or lists of such trees to undergo pairwise comparison.}

\item{k}{An arbitrary exponent to which to raise the Jaccard index.
Integer values greater than one are anticipated by Böcker \emph{et al}.
The Nye \emph{et al}. metric uses \code{k = 1}.
As k → ∞, the metric converges to the Robinson-Foulds metric.}

\item{arboreal}{Logical specifying whether to enforce arboreal matches, by
assigning zero similarity to contradictory pairs of partitions on an
\emph{ad hoc} basis.}

\item{similarity}{Logical specifying whether to report the result as a tree
similarity, rather than a difference.}

\item{normalize}{If a numeric value is provided, this will be used as a
maximum value against which to rescale results.
If \code{TRUE}, results will be rescaled against a maximum value calculated from
the specified tree sizes and topology, as specified in the 'Normalization'
section below.
If \code{FALSE}, results will not be rescaled.}

\item{reportMatching}{Logical specifying whether to return the clade
matchings as an attribute of the score.}

\item{splits1}{Logical matrices where each row corresponds to a terminal,
either listed in the same order or bearing identical names (in any sequence),
and each column corresponds to a bipartition split, such that
each terminal is identified as a member of the ingroup (\code{TRUE}) or outgroup
(\code{FALSE}) of the respective bipartition split.}

\item{splits2}{Logical matrices where each row corresponds to a terminal,
either listed in the same order or bearing identical names (in any sequence),
and each column corresponds to a bipartition split, such that
each terminal is identified as a member of the ingroup (\code{TRUE}) or outgroup
(\code{FALSE}) of the respective bipartition split.}
}
\description{
Implements the Jaccard-Robinson-Foulds metric of Böcker \emph{et al}. (2013).
}
\details{
In short, this finds the optimal matching that pairs each branch from
one tree with a branch in the second, where matchings are scored according to
the size of the largest bipartition that is consistent with both of them,
normalized against the Jaccard index, and raised to an arbitrary exponent.

By default, arboreal matchings are enforced.

Note that the settings \code{k = 1, arboreal = FALSE} give the similarity metric
of Nye \emph{et al}. (2006); a slightly faster implementation of this metric is
available as \code{[NyeTreeSimilarity]}.

The examples section details how to visualize matchings with non-default
parameter values.
}
\section{Functions}{
\itemize{
\item \code{JaccardSplitSimilarity}: Calculate tree similarity from splits
instead of trees.
}}

\section{Normalization}{


If \code{normalize = TRUE}, then results will be rescaled from zero to one by
dividing by the maximum possible value for trees of the given topologies,
which is equal to the number of partitions in both trees.
You may wish to normalize instead against the maximum number of partitions
present in a pair of trees with \emph{n} terminals, by specifying
\code{normalize = n - 3}.
}

\examples{
{
set.seed(2)
tree1 <- ape::rtree(10)
tree2 <- ape::rtree(10)
JaccardRobinsonFoulds(tree1, tree2, k = 2, arboreal = FALSE)
JaccardRobinsonFoulds(tree1, tree2, k = 2, arboreal = TRUE)

JRF2 <- function (tree1, tree2, ...) 
  JaccardRobinsonFoulds(tree1, tree2, k = 2, arboreal= TRUE, ...)
  
VisualizeMatching(JRF2, tree1, tree2, matchZeros = FALSE)

}


}
\references{
\itemize{
\item \insertRef{Nye2006}{TreeDist}
\item \insertRef{Bocker2013}{TreeDist}
}
}
\seealso{
Other tree distances: \code{\link{KendallColijn}},
  \code{\link{MatchingSplitDistance}},
  \code{\link{NyeTreeSimilarity}},
  \code{\link{RobinsonFouldsInfo}},
  \code{\link{TreeDistance}}
}
\author{
Martin R. Smith
}
\concept{tree distances}
