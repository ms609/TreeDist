% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree_distance_utilities.R
\name{CompareAll}
\alias{CompareAll}
\title{Distances between each pair of trees}
\usage{
CompareAll(x, Func, FUN.VALUE = Func(x[[1]], x[[1]]), ...)
}
\arguments{
\item{x}{List of trees, in the format expected by \code{Func}.}

\item{Func}{distance function returning distance between two trees,
e.g. \link[phangorn:treedist]{path.dist}.}

\item{FUN.VALUE}{Format of output of \code{Func()}, passed to \code{\link{vapply}}.
If left unspecified, generated by running \code{Func(x[[1]], x[[1]])}.}

\item{\dots}{Additional parameters to pass to \code{Func}.}
}
\value{
Distance matrix of class \code{dist} detailing distance between each pair
of trees.
Identical trees are assumed to have zero distance.
}
\description{
Calculates the distance between each tree in a list, and each other tree
in the same list.
}
\details{
(Can in fact be used more generally: \code{Func} can be any symmetric function.)
}
\examples{
  library(TreeTools)
  
  # Generate a list of trees to compare
  trees <- list(BalancedTree(1:8), PectinateTree(1:8), PectinateTree(c(4:1, 5:8)))
  
  # Compare each tree with each other tree
  CompareAll(trees, NNIDist)
  
  # Optionally, improve speed slightly by pre-specifying FUN.VALUE:
  dist <- CompareAll(trees, NNIDist, FUN.VALUE = integer(3))
  
  # View distances as a matrix
  as.matrix(dist$lower)
  
}
\author{
Martin R. Smith (\href{mailto:martin.smith@durham.ac.uk}{martin.smith@durham.ac.uk})
}
\concept{pairwise tree distances}
