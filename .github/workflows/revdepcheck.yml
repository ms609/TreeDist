name: rev-dep-check

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - "Meta**"
      - "docs**"
      - "inst**"
      - "man**"
      - "man-roxygen**"
      - "memcheck**"
      - "tests**"
      - "vignettes**"
      - "**.git"
      - "**.json"
      - "**.md"
      - "**.yml"
      - "!**revdepcheck.yml"
      - "**.R[dD]ata"
      - "**.Rpro*"
  pull_request:
    branches:
      - main
      - master
    paths-ignore:
      - "Meta**"
      - "docs**"
      - "inst**"
      - "man**"
      - "man-roxygen**"
      - "memcheck**"
      - "tests**"
      - "vignettes**"
      - "**.git"
      - "**.json"
      - "**.md"
      - "**.yml"
      - "!**revdepcheck.yml"
      - "**.R[dD]ata"
      - "**.Rpro*"

# Not using ms609/revdepcheck as pak fails with external dependencies
# https://github.com/r-lib/actions/issues/534
jobs:
  mem-check:
    runs-on: ubuntu-latest

    name: revdepcheck, R release

    env:
      _R_CHECK_CRAN_INCOMING_: true # Seemingly not set by --as-cran
      _R_CHECK_FORCE_SUGGESTS_: false # CRAN settings
      R_COMPILE_AND_INSTALL_PACKAGES: 'never'
      _R_CHECK_THINGS_IN_CHECK_DIR_: false
      R_REMOTES_STANDALONE: true
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_CRAN_INCOMING_USE_ASPELL_: false # Set to true when can figure how to install aspell on Windows
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = c('soft', 'Config/Needs/revdeps')), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_github("r-lib/revdepcheck")
          remotes::install_deps(dependencies = c('soft', 'Config/Needs/revdeps'))
        shell: Rscript {0}

      - name: Check reverse dependencies
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          revdepcheck::revdep_check(timeout = as.difftime(60, units = 'mins'), num_workers = 4)
          problems <- readLines('revdep/problems.md', warn = FALSE)
          if (length(problems) > 1) stop(paste0(problems, collapse= "\n"))
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: revdep-results
          path: revdep/*.md
