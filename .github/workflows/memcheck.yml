# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
# polished some requirements for valgrid to check and added verbose option to valgrid  
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - "Meta**"
      - "docs**"
      - "**.git"
      - "**.json"
      - "**.md"
      - "**.yml"
      - "!**memcheck.yml"
      - "**.R[dD]ata"
      - "**.Rpro*"
  pull_request:
    branches:
      - main
      - master
    paths-ignore:
      - "Meta**"
      - "docs**"
      - "**.git"
      - "**.json"
      - "**.md"
      - "**.yml"
      - "!**memcheck.yml"
      - "**.R[dD]ata"
      - "**.Rpro*"

name: mem-check

jobs:
  mem-check:
    runs-on: ubuntu-latest

    name: valgrind ${{ matrix.config.test }}, ubuntu, R release

    strategy:
      fail-fast: false
      matrix:
        config:
          - {test: 'tests'}
          - {test: 'examples'}
          - {test: 'vignettes'}
          
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/focal/latest
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-latex-base texlive-fonts-recommended libcurl4-openssl-dev libglpk40 wget valgrind libicu-dev

      - name: Query dependencies
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)'
          Rscript -e 'writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")'

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install additional system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          Rscript -e 'remotes::install_deps(dependencies = TRUE)'
          Rscript -e 'remotes::install_github("RcppCore/Rcpp")'
          Rscript -e 'remotes::install_cran("devtools")'
        
      - name: Install TreeDist
        run: |
          cd ..
          R CMD build --no-manual --no-resave-data TreeDist
          R CMD INSTALL TreeDist*.tar.gz
          cd TreeDist

      - name: valgrind - memcheck ${{ matrix.config.test }}
        run: |
            R -d "valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --error-exitcode=1" --vanilla < memcheck/${{ matrix.config.test }}.R
