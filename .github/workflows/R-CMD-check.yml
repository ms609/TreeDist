# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  schedule:
    - cron: "24 06 * * 1"
  push:
    branches:
      - main
      - master
    paths-ignore:
      - "Meta**"
      - "memcheck**"
      - "docs**"
      - "**.git"
      - "**.json"
      - "**.md"
      - "**.yml"
      - "!**R-CMD-check.yml"
      - "**.R[dD]ata"
      - "**.Rpro*"
  pull_request:
    branches:
      - main
      - master
    paths-ignore:
      - "Meta**"
      - "memcheck**"
      - "docs**"
      - "**.git"
      - "**.json"
      - "**.md"
      - "**.yml"
      - "!**R-CMD-check.yml"
      - "**.R[dD]ata"
      - "**.Rpro*"

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: '4.1', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      _R_CHECK_CRAN_INCOMING_: true # Seemingly not set by --as-cran
      _R_CHECK_FORCE_SUGGESTS_: false # CRAN settings
      R_COMPILE_AND_INSTALL_PACKAGES: 'never'
      _R_CHECK_THINGS_IN_CHECK_DIR_: false
      R_REMOTES_STANDALONE: true
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install apt packages (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            texlive-latex-base texlive-fonts-recommended libcurl4-openssl-dev \
            libglpk40 libicu66
                      
      - name: Install GitHub packages
        if: runner.os != 'Linux'
        run: |
          # Handled by extra-packages on Linux, oddly not for Mac or Windows
          install.packages('remotes')
          remotes::install_github('RcppCore/Rcpp')
          remotes::install_github('ms609/TreeDistData')
        shell: Rscript {0}

      - name: Set up R dependencies (Windows)
        if: runner.os == 'Windows'
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            ms609/TreeDistData
            RcppCore/Rcpp
            ms609/TreeTools
          needs: |
            check
            coverage
            
      - name: Set up R dependencies (Non-Windows)
        if: runner.os != 'Windows'
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            ms609/TreeDistData
            RcppCore/Rcpp
            ms609/TreeTools
            phangorn=?ignore-before-r=4.4.0
            ggplot2=?ignore-before-r=4.4.0
            hypervolume=?ignore-before-r=4.4.0
            kdensity=?ignore-before-r=4.4.0
            Rogue=?ignore-before-r=4.4.0
            TreeSearch=?ignore-before-r=4.4.0
            Umatrix=?ignore-before-r=4.4.0
            uwot=?ignore-before-r=4.4.0
          needs: |
            check

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v2
        
      - name: Check package
        uses: r-lib/actions/check-r-package@v2

      - name: Code coverage
        if: runner.os == 'Windows'
        run: covr::codecov()
        shell: Rscript {0}
